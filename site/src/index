# 'title' = 'PageTemplate'

h2. Vital Information and Links

|Version|2.0.0|
|Project Page|"PageTemplate on RubyForge":http://rubyforge.org/projects/pagetemplate|
|Instructions|Start with "Installing It":install|
|API Documenation|"Generated by RDoc":ref|
|Download|"Grab the File":http://rubyforge.org/frs/?group_id=407|
|Forums|"Talk about PageTemplate":http://rubyforge.org/forum/?group_id=407|
|Bugs|"Report a Bug":http://rubyforge.org/tracker/?atid=1626&amp;group_id=407&func=browse|
|Features|"Request a Feature":http://rubyforge.org/tracker/?atid=1629&amp;group_id=407&func=browse|
|Project Changes|"Latest CVS Copy of Changes":http://rubyforge.org/cgi-bin/viewcvs.cgi/*checkout*/PageTemplate/Changes?cvsroot=pagetemplate|

p(note). PageTemplate 2.x is in a major state of flux. Loads of new features were added by Greg Millam in
short order, and we are still streamlining and testing the code. All that means for you is that the docs
are not as up to date as we would like. Still, we try. Shouldn't be _too_ bad. Until then, look at
the "2.0 overview page":/products/pagetemplate/version2.html.

h2. Introduction

PageTemplate is a Ruby package which allows you to utilize text
templates for your Web projects. It is mainly intended for use in
a CGI environment, but has been designed to be useful in a broad
range of similar applications. It is inspired by, yet almost entirely
unlike, the "HTML::Template":http://html-template.sourceforge.net/ package 
available for Perl. It has many features in common with other templating 
engines:

* Variable substitution
* "if/else" blocks - inserting chunks of content depending on the 
  existence of a flag variable
* "loop/no" blocks - repeatedly inserting a chunk of content, using 
  values from a list
* A simple default syntax
* The ability to include external files

It also has a few features of its own _(otherwise, where's the fun?)_.

* Customizable markup syntax to simplify integration with your own 
  tools.
* Loop metavariables for special cases like the first or last step through
  a loop.
* Variable preprocessor to handle things like escaping HTML entities and
  displaying URL-encoded strings.
* Access to the accessors of a variable. _(like @circle.radius@)_

More features are planned, such as support for localization to allow 
native-language markup. PageTemplate already does what I want it to do, so it
has hit the stage of refinement and addition of requested features.

h2. What PageTemplate Is Not

* It's not a programming language. If you want a programming language 
  for your Web pages, try "PHP":http://www.php.net/.
* It's not a tool for embedding Ruby code into your Web pages. 
  "eruby":http://www.modruby.org/ already does a fine job of that.
* It is _definitely_ not XML. PageTemplate serves a much narrower field. 
  If you want to use Ruby with XML, there are 
  "excellent resources":http://www.rubyxml.com/ for that.
* PageTemplate is a personal project, which means that it's not a 
  commercial product. As much as I hope that it's useful and stable on 
  your computer, I can't make any promises. If installing PageTemplate 
  levels New Jersey, there's nothing I can do about it. This is my 
  version of the standard **no warranty** warranty.
* Last but not least, PageTemplate is not HTML::Template. HTML::Template 
  has been growing and evolving for a few years, while PageTemplate was originally
  the result of a week alone with 5 pounds of coffee. PageTemplate has
  matured over the last couple of years, but it is still just a small
  project maintained by a couple of guys in their spare time.

h2. Motivation

I've been a fan of Perl's HTML::Template package for a long time, and I 
miss its robust usefulness whenever I'm using a language that isn't Perl. 
After delving deeper into other languages, I thought it might be fun to make
some of that usefulness available in "Ruby":/geekery/ruby/index.html.
It would give me a decent-sized personal project, which would help me stretch 
my skills with project development and unit testing. Plus, if I had a 
templating system available to me, maybe I wouldn't miss Perl so badly.

So those are my primary motivations: personal education and homesickness.

Once the code started taking shape, though, I decided that I wanted
this to be useful for other people. "Download and use" kind
of useful. 

The road since PageTemplate 1.0 has been shaped almost entirely by
user suggestions. My own needs for PT were modest, and it's 
pretty much been complete for me since 0.3. All of the additions since
then, such as include, unless, comments, and loop metavariables, have
been added because _you_ wanted more out of PT. If it wasn't you, then
maybe it was that guy behind you. I'm delighted that people have
been pushing and redefining PageTemplate to fit their own nefarious
goals. And heck, I'll admit it. Loop metavariables are cool. 

So if there's anything I can do to make it easier for you
to put it to use in your own projects, please "tell me":#{contact}!

h2. Using PageTemplate

First, you'll want to "download and install":install the latest version of 
PageTemplate. Then, "designers":design will make templates, 
"programmers":program will write code, and some of us will do both. 
Eventually, you will probably get tired of the default syntax, and want to 
make your own. If you're an especially geeky sort of person, you'll no doubt 
want to look at the 
"reference":ref to classes and methods that are available in the PageTemplate 
package.

Most importantly, _enjoy yourself_! PageTemplate is 
supposed to be good geeky fun, not hard work with lots of sweat 
and turmoil!

h2. Examples

There's nothing like an example or two to see how something works in
the real world. Making new examples is a priority now, so this list will
contain more items in the near future.

Unfortunately, I haven't really gotten around to making or finding examples. 
What do I have so far?

* "The COOLNAMEHERE contact page":#{contact} is written with Ruby and
  PageTemplate.

h2. Users

We would love to hear about what you've done with PageTemplate.
"Contact me":#{contact} with your stories and links, and I'll put it in this 
section.

h2. The License

PageTemplate is distributed under The MIT License, which is detailed
below.

h3. The MIT License

Copyright (c) 2002-2005 Brian Wisti, Greg Millam

Permission is hereby granted, free of charge, to any person obtaining a copy 
of this software and associated documentation files (the "Software"), to 
deal in the Software without restriction, including without limitation the 
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
sell copies of the Software, and to permit persons to whom the Software is 
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all 
copies or substantial portions of the Software.

<strong>
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
SOFTWARE.
</strong>

[install]/products/pagetemplate/install.html
[design]/products/pagetemplate/designer.html
[program]/products/pagetemplate/programmer.html
[ref]/products/pagetemplate/doc/index.html
