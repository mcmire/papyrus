TODO

* Add Papyrus.available_commands to store an array of commands to load
* Rewrite Lexicon - when Papyrus is loaded (or the first time a command is looked up, or something),
  introspect Command classes in Command::Available (or something) and gather information
  (name, modifiers, aliases), and cache info. We'll probably have a few methods in
  Lexicon to do this
* Move stuff in DefaultLexicon to Command subclasses
* Add alias_modifier that +alias_method+s the modifier method and adds another entry
  to @modifiers

* Remove UnknownCommand

* Currently we don't support [foo] variables
  
* Remove Command::Base#closed_by? - [/for] notation should be hard-coded in parser
  I think. Also remove #end method of BlockCommand and subclasses.
  
* Get rid of method_separator_regexp (Compiler, ContextItem#get)
* Remove :source option for Compiler. #compile should accept a filename; #parse should
  accept raw template content. That's it.
* DefaultPreprocessor - rename to Filters or something
* All subclasses of BlockCommand should not override initialize() or add() unless necessary
* Should we add attr_accessors for all instance variables for easier access during
  testing?
